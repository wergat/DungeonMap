os.loadAPI(":dungeon/apis/dcore")
dcore.requireAPI("items")
dcore.requireAPI("advitem")
dcore.requireAPI("potion")

-- TODO: Convert the datatag-string to table

local chest_types = {" "," Equipment "," Supply "," Food "," Potion "}

local item_pool = {}
item_pool[1] = { -- Normal
 {["id"] = 263,["value"] = 3,["max"] = 10}, -- apple
 {["id"] = 260,["value"] = 1,["max"] = 18},-- coal
 {["id"] = 297,["value"] = 4,["max"] = 6}, -- bread
 {["id"] = 363,["value"] = 6,["max"] = 10},  -- raw steak
 {["id"] = 364,["value"] = 25,["max"] = 7}, -- steak
 {["id"] = 280,["value"] = 2,["max"] = 13}, -- stick
 {["id"] = 392,["value"] = 4,["max"] = 10}, -- potato
 {["id"] = 393,["value"] = 8,["max"] = 6}, -- cooked ^
 {["id"] = 296,["value"] = 2,["max"] = 12}, -- wheat
 {["id"] = 289,["value"] = 7,["max"] = 9}, -- gunpowder
 {["id"] = 334,["value"] = 12,["max"] = 10}, -- lether
 {["id"] = 287,["value"] = 8,["max"] = 7}, -- string
 {["id"] = 318,["value"] = 5,["max"] = 2}, -- flint
 {["id"] = 288,["value"] = 9,["max"] = 4}, -- fether
 {["id"] = 348,["value"] = 25,["max"] = 10}, -- glowstone
 {["id"] = 371,["value"] = 20,["max"] = 24}, -- golden nuggets
 {["id"] = 266,["value"] = 180,["max"] = 12}, -- golden ingot
 {["id"] = 41,["value"] = 1620,["max"] = 6}, -- golden block
 {["id"] = 264,["value"] = 14580,["max"] = 3}, -- diamonds
 {["id"] = 384,["value"] = 35,["max"] = 30}, -- bottle de xp
 {["id"] = 352,["value"] = 10,["max"] = 14}, -- bone
 {["id"] = 50,["value"] = 3,["max"] = 20}, -- torch
 {["id"] = 263,["value"] = 3,["max"] = 10}, -- apple
 {["id"] = 393,["value"] = 8,["max"] = 6}, -- cooked potato
 {["id"] = 364,["value"] = 25,["max"] = 7}, -- steak
  --{["id"] = ,["value"] = ,["max"] = },
}
item_pool[2] = { -- Equipment
 {["id"] = 260,["value"] = 1,["max"] = 18},-- coal
 {["id"] = 371,["value"] = 20,["max"] = 24}, -- golden nuggets
 {["id"] = 266,["value"] = 180,["max"] = 12}, -- golden ingot
 {["id"] = 41,["value"] = 1620,["max"] = 6}, -- golden block
 {["id"] = 264,["value"] = 14580,["max"] = 3}, -- diamonds
  --{["id"] = ,["value"] = ,["max"] = },
}
item_pool[3] = { -- Supply
 {["id"] = 260,["value"] = 1,["max"] = 18},-- coal
 {["id"] = 280,["value"] = 2,["max"] = 13}, -- stick
 {["id"] = 289,["value"] = 7,["max"] = 9}, -- gunpowder
 {["id"] = 334,["value"] = 12,["max"] = 10}, -- leather
 {["id"] = 287,["value"] = 8,["max"] = 7}, -- string
 {["id"] = 318,["value"] = 5,["max"] = 2}, -- flint
 {["id"] = 288,["value"] = 9,["max"] = 4}, -- feather
 {["id"] = 348,["value"] = 25,["max"] = 10}, -- glowstone
 {["id"] = 266,["value"] = 180,["max"] = 12}, -- golden ingot
 {["id"] = 41,["value"] = 1620,["max"] = 6}, -- golden block
 {["id"] = 264,["value"] = 14580,["max"] = 3}, -- diamonds
 {["id"] = 384,["value"] = 35,["max"] = 30}, -- bottle de xp
 {["id"] = 352,["value"] = 10,["max"] = 14}, -- bone
 {["id"] = 50,["value"] = 3,["max"] = 13}, -- torch
 {["id"] = 50,["value"] = 2,["max"] = 5}, -- torch
 {["id"] = 50,["value"] = 1,["max"] = 3}, -- torch
 {["id"] = 338,["value"] = 3,["max"] = 20}, -- sugar cane
  --{["id"] = ,["value"] = ,["max"] = },
}
item_pool[4] = { -- Food
 {["id"] = 263,["value"] = 3,["max"] = 10}, -- apple
 {["id"] = 297,["value"] = 4,["max"] = 6}, -- bread
 {["id"] = 363,["value"] = 6,["max"] = 10},  -- raw steak
 {["id"] = 364,["value"] = 25,["max"] = 7}, -- steak
 {["id"] = 392,["value"] = 4,["max"] = 10}, -- potato
 {["id"] = 393,["value"] = 8,["max"] = 6}, -- cooked ^
 {["id"] = 296,["value"] = 2,["max"] = 12}, -- wheat
 {["id"] = 391,["value"] = 4,["max"] = 5}, -- carrot
 {["id"] = 266,["value"] = 180,["max"] = 12}, -- golden ingot
 {["id"] = 41,["value"] = 1620,["max"] = 6}, -- golden block
 {["id"] = 264,["value"] = 14580,["max"] = 3}, -- diamonds
 {["id"] = 263,["value"] = 2,["max"] = 2}, -- apple
 {["id"] = 393,["value"] = 8,["max"] = 6}, -- cooked potato
 {["id"] = 364,["value"] = 25,["max"] = 7}, -- steak
 {["id"] = 365,["value"] = 4,["max"] = 10}, -- raw chicken
 {["id"] = 366,["value"] = 7,["max"] = 7}, -- cooked chicken
 {["id"] = 349,["value"] = 2,["max"] = 7}, -- raw fish
 {["id"] = 350,["value"] = 5,["max"] = 7}, -- cooked fish
 {["id"] = 295,["value"] = 3,["max"] = 3}, -- seeds wheat
 {["id"] = 361,["value"] = 6,["max"] = 3}, -- seeds pumpkin
 {["id"] = 362,["value"] = 6,["max"] = 3}, -- seeds melon
 {["id"] = 353,["value"] = 8,["max"] = 17}, -- sugar
 {["id"] = 357,["value"] = 1,["max"] = 5}, -- cookie
  --{["id"] = ,["value"] = ,["max"] = },
}
--item_pool[5] = {
-- {["id"] = 50,["value"] = 3,["max"] = 13}, -- torch 
--}



function getChestRarity()
 local chance = {0.25,0.3,0.35,0.4,0.4,0.4}
 local q = 1
 while((math.random(20)/20)<=chance[q] and q<#chance)do q = q + 1 end
 return q
end

function firstToUpper(str) return (str:gsub("^%l", string.upper)) end

function getChestData(_startDifficulty,_chestType)
 local chestRarity = chest.getChestRarity()
 local difficulty = _startDifficulty*(6+3*chestRarity+_chestType)
 local dataTable = {}
 dataTable["Items"] = {}

 local loot = {}
 local slots = {}
 local items_choosen = 0
 loot["item"] = {}

 while difficulty>0 do
  local itemIndex = math.random(#item_pool[_chestType])
  while(item_pool[_chestType][itemIndex].value > difficulty)do
   itemIndex = math.random(#item_pool[_chestType])
  end

  local maxitems = (item_pool[_chestType][itemIndex]["max"])
  local maxcapacity = math.floor(difficulty/item_pool[_chestType][itemIndex]["value"])
  local maxcount = math.min(maxitems,maxcapacity)
  local count = 1
  while (count<maxcount and math.random(20)>2) do
   count = count + 1
  end

  -- Add Equipment Item
  if(math.random(14)==1 or (chestRarity>1 and items_choosen==0) or _chestType==2)then
   local itemDataTable = {}
   local moreInfo = false
  
   if(items_choosen>0)then
    itemDataTable,moreInfo = advitem.getEquipment((difficulty*2),nil,"player",1)
   else
    itemDataTable,moreInfo = advitem.getEquipment((_startDifficulty*2),nil,"player",chestRarity)
   end
   items_choosen = items_choosen + 1
  
   if(moreInfo~=false)then
    moreInfo["value"] = moreInfo["value"] * items_choosen
    difficulty = difficulty - math.floor(moreInfo["value"]*3)
    itemDataTable["Damage"] = math.floor(((math.random(5)-1)/5)*items.getDurability(moreInfo["itemID"]))
    itemDataTable["Count"] = 1
    table.insert(loot["item"],itemDataTable)
   else
    -- Add normal item to pool
    difficulty = difficulty - item_pool[_chestType][itemIndex].value*count
    loot[item_pool[_chestType][itemIndex].id] = (loot[item_pool[_chestType][itemIndex].id] or 0) + count
   end
  else
   -- Add Potion instead of item
   if(math.random(10)==1 or _chestType==5)then
    local lootData = {}
    local potionData,name,damage = potion.generateDropPotion(difficulty*1.1)
	lootData["tag"] = {}
	lootData["tag"]["CustomPotionEffects"] = potionData
	lootData["id"] = 373
	lootData["Count"] = 1
	lootData["Damage"] = damage
	lootData["tag"]["display"] = {}
	lootData["tag"]["display"]["Name"] = potion.prefixOrSuffixName(name,potionData["Seed"])
	lootData["tag"]["display"]["Lore"] = potionData["Lore"]
	table.insert(loot["item"],lootData)
    difficulty = difficulty - 30
   else
    -- Add normal item to pool
    difficulty = difficulty - item_pool[_chestType][itemIndex].value*count
    loot[item_pool[_chestType][itemIndex].id] = (loot[item_pool[_chestType][itemIndex].id] or 0) + count
   end
  end
 end

 for s=1,27 do
  table.insert(slots,(s-1))
 end

 if(loot["item"][1]==nil)then loot["item"] = nil end

 for i=0,26 do 
  for k,v in pairs(loot) do
   local slot = math.random(#slots)
   --
   if(loot["item"]~=nil)then
    local data = loot["item"][1]
    data["Slot"] = slots[slot]
    table.insert(dataTable["Items"],data)
    table.remove(loot["item"],1)
    if(loot["item"][1]==nil)then loot["item"] = nil end
   else
    table.insert(dataTable["Items"],{["Slot"] = slots[slot],["id"] = k,["Count"] = math.min(v,64)})
    if(v>64)then
     loot[k] = loot[k] - 64
    else   
     loot[k] = nil
    end
   end
   table.remove(slots,slot)
   break
  end
 end
 dataTable["CustomName"] = (advitem.q_color[chestRarity]).."§l"..firstToUpper(advitem.qualitys[chestRarity])..chest_types[_chestType].."Chest§r"
 return dataTable
end


function addNewItemPool(_table,_name)
 item_pool[#item_pool+1] = _table
 chest_types[#chest_types+1] = _name
end

function addNewItemToPool(_poolID,_itemTable)
 item_pool[_poolID][#item_pool[_poolID]+1] = _itemTable
end

function placeChest(...)
 local tArgs = arg
 
 local x = 0
 local y = 23
 local z = 0
 local chestType = 1
 if(math.random(5)>2)then chestType = math.random(#item_pool) end
 
 local startDifficulty = 1

 if(#tArgs==1)then
  startDifficulty = tonumber(tArgs[1])
 elseif(#tArgs==2)then
  startDifficulty = tonumber(tArgs[1])
  chestType = tonumber(tArgs[2])
 elseif(#tArgs==3)then
  x = tonumber(tArgs[1])
  y = tonumber(tArgs[2])
  z = tonumber(tArgs[3])
 elseif(#tArgs==4)then
  startDifficulty = tonumber(tArgs[1])
  x = tonumber(tArgs[2])
  y = tonumber(tArgs[3])
  z = tonumber(tArgs[4])
 elseif(#tArgs==5)then
  startDifficulty = tonumber(tArgs[1])
  x = tonumber(tArgs[2])
  y = tonumber(tArgs[3])
  z = tonumber(tArgs[4])
  chestType = tonumber(tArgs[5])   
 end

 local datatag =  dcore.getNBTStringFromTable(chest.getChestData(startDifficulty,chestType))
 
 a,e = commands.setblock(x,y,z,"minecraft:chest","1","replace",datatag)
 
 if(not a)then
  print("Error:"..e[1],(e[2] or ""))
  print_log("error","[chest] Failed to execute Command: /setblock " .. x .. " " .. y .. " " .. z .. " minecraft:chest 1 replace "..datatag.."; Error message:"..e[1]..(e[2] or "").."")
 end
end

