os.loadAPI(":dungeon/apis/dcore")
dcore.requireAPI("chest")
dcore.requireAPI("npc")

term.clear()
term.setCursorPos(1,1)

local Carl = {["npcID"] = npc.newNPC("Carl","green",-14,23,0)}
local Carl2 = {["npcID"] = npc.newNPC("Carl","green",-14,23,0)}

local progress = 1

-- So _G dont get spammed
functions = {}
functions["talkToCarl"] = function()
 local d = npc.newDialogForNPC(
  Carl.npcID,
  '{"text":"So how are you doing in this magical world?"}',
  {'Great, could use something to do though!','I don\'t know, running around and looking for loot.'},
  {"getQuestFromCarl","getLootFromCarl"}
 )
 
 npc.enableDialog(Carl.npcID,d)
 npc.newNPCDialogTrigger(Carl.npcID,d,5)
end
functions["getLootFromCarl"] = function()
 local d = npc.newDialogForNPC(
  Carl.npcID,
  '{"text":"Some loot is what you want? Here is a chest full of loot for you! But only if you do a job for me! Do you accept?"}',
  {'Yes!', 'No.'},
  {"startQuestSkeleton", "declineJob"}
  )
 npc.enableDialog(Carl.npcID,d)
 npc.newNPCDialogTrigger(Carl.npcID,d,5)
end
functions["getQuestFromCarl"] = function()
 local d = npc.newDialogForNPC(
  Carl.npcID,
  '"Oooh, seeking for some quests? Do you want one?"',
  {'Yes!', 'No.'},
  {"startQuestSkeleton", "declineJob"}
 )
 npc.enableDialog(Carl.npcID,d)
 npc.newNPCDialogTrigger(Carl.npcID,d,5)
end
functions["startQuestSkeleton"] = function()
 local d = npc.newDialogForNPC(
  Carl.npcID,
  '"Bring me 2 stacks of bones please."',
  {'I already have them!', 'Goodbye!'},
  {"finishQuest", "null"}
 )
 npc.enableDialog(Carl.npcID,d)
 npc.newNPCDialogTrigger(Carl.npcID,d,5)
 Carl.gaveQuest = true
end
functions["helloCarl"] = function()
 if Carl.isDone then
	Carl.greetings = npc.newDialogForNPC(Carl.npcID, '"Sorry, but I\'m out of treasure for you. Thanks, though!"', {}, {}) 
 elseif Carl.gaveQuest then
	Carl.greetings = npc.newDialogForNPC(Carl.npcID, '"Hey, welcome back! Do you have enough bones?"', {'Yeah!', 'Nope.'}, {"finishQuest", "returnNotDone"})
 elseif(Carl.greetings==nil)then
  Carl.greetings = npc.newDialogForNPC(Carl.npcID,'{"text":"Hey you; wanna talk?"}',{'Sure!','No.'},{"talkToCarl","null"})
 else
  npcs[Carl.npcID]["dialogs"][Carl.greetings]["text"] = '{"text":"Nice to see you again! Wanna talk now?"}'
  npcs[Carl.npcID]["dialogs"][Carl.greetings]["answered"] = false
 end
 npc.enableDialog(Carl.npcID,Carl.greetings)
 npc.newNPCDialogTrigger(Carl.npcID,Carl.greetings,{["t"] = "isInArea",["r"] = 5})
end
functions["declineJob"] = function()
	local d = npc.newDialogForNPC(
		Carl.npcID,
		'"Alright, that\'s fine!"',
		{},
		{}
	)
	npc.enableDialog(Carl.npcID,d)
	npc.newNPCDialogTrigger(Carl.npcID,d,5)
end
functions["finishQuest"] = function()
	rednet.open("top")
	local d = npc.newDialogForNPC(
		Carl.npcID,
		'"Great! Tell me when you\'re ready, place them in my servant turtle and press any key. He\'ll check them for me."',
		{'Ready!'},
		{'waitForVerify'}
	)
	npc.enableDialog(Carl.npcID,d)
	npc.newNPCDialogTrigger(Carl.npcID,d,5)
end
functions["waitForVerify"] = function()
	print("Waiting for signal")
	rednet.send(2, "rea")
	local id, message = rednet.receive()
	if message == "suc" then
		functions["sucQuest"]()
	elseif message == "cheat" then
		functions["cheatQuest"]()
	else
		functions["failQuest"]()
	end
end
functions["sucQuest"] = function()
	local d = npc.newDialogForNPC(
		Carl.npcID,
		'"Thanks! Here\'s your reward."',
		{},
		{}
	)
	npc.enableDialog(Carl.npcID,d)
	npc.newNPCDialogTrigger(Carl.npcID,d,5)
	math.randomseed(os.time())
	chest.placeChest(math.random(1,200), -13, 23, 0)
	Carl.gaveQuest = nil
	Carl.isDone = true
end
functions["cheatQuest"] = function()
	commands.exec("/tp @p -15 20.0 -2")
end
functions["failQuest"] = function()
	local d = npc.newDialogForNPC(
		Carl.npcID,
		'"I need 2 stacks of bones, that\'s not enough!"',
		{},
		{}
	)
	npc.enableDialog(Carl.npcID,d)
	npc.newNPCDialogTrigger(Carl.npcID,d,5)
end
functions["returnNotDone"] = function()
	local d = npc.newDialogForNPC(
		Carl.npcID,
		'"Alright, I\'ll wait."',
		{},
		{}
	)
	npc.enableDialog(Carl.npcID,d)
	npc.newNPCDialogTrigger(Carl.npcID,d,5)
end
functions["byeCarl"] = function()
 if(Carl2.bye==nil)then
  Carl2.bye = npc.newDialogForNPC(Carl2.npcID,'{"text":"See you soon!"}',{},{"byeCarl"})
 else
  npcs[Carl2.npcID]["dialogs"][Carl2.bye]["answered"] = false
 end
 npc.enableDialog(Carl2.npcID,Carl2.bye)
 npc.newNPCDialogTrigger(Carl2.npcID,Carl2.bye,{["t"] = "leaveArea",["r"] = 5})
 functions["helloCarl"]()
end

functions["null"] = function() end

print("Functions loaded")
print("Resetting")

local i = 1
while npc.ezCmd("/scoreboard players list "..i.."",1) or npc.ezCmd("/scoreboard players list "..(i+1).."",1) do
 npc.ezCmd("/scoreboard players reset "..i.."")
 i = i + 1
end


print("Loading Data")

functions["byeCarl"]()

print("Running")

while true do
 npc.dialogCheckForStart()
 npc.TriggerFunction(functions,Carl.npcID,Carl.greetings,2)
 npc.dialogCheckForDialogAnswers(functions)
 sleep(.5)
end
