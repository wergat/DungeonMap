keylist = textutils.unserialize(http.get("http://pastebin.com/raw.php?i=JBAmmZ2x").readAll())
local usedKey
local JSON = assert(loadfile ":dungeon/dcore/apis/JSON.lua")()

function setKey(key)
	usedKey = key
end


function testkeylist(t)
	local rate_url = "https://api.github.com/rate_limit"
	local res = {}
	for i = 1, #t do
		local key = t[i]
		local x = http.get(rate_url,{["Authorization"] = "token " .. key,}).readAll()
		local grt = JSON:decode(x)
		local left = grt["resources"]["core"]["remaining"]
		res[key] = left
	end
	return res --table
end

function pickWorkingKey(t)
	local r = testkeylist(t)
	local x = 0
	local ab = true
	for i = 1, #t do
		if r[t[i]] > 59 then
			ab = false
		end
	end
	if ab then
		return t[math.random(#t)] --pick any key, all are below threshold
	end
	repeat
		key = t[math.random(#t)]
	until r[key] > 59
	return key
end

function get(url, header, key)
	if not key then
		if not usedKey then
			return http.get(url, header)
		else
			key = usedKey
		end
	end
	header = header or {}
	header["Authorization"] = "token " .. key
	return http.get(url, header)
end

function getRequestAsTable(url, header, key)
	local x = get(url, header, key) --wraps github.get
	if x then
		x = x.readAll()
	else
		return false, "GITHUB_NO_RESPONSE"
	end
	return JSON:decode(x) --parses JSON
end

function githubRequest(url, header)
	local header = header or {}
	return getRequestAsTable(url, header, pickWorkingKey(keylist))
end

function autoRequest(...)
	print("WARNING: autoRequest is no longer supported! Use githubRequest instead.")
	return githubRequest(unpack({...}))
end
