local data = {}
local default = {}

-- sets a key in the database if it is not set, returns the value anyways.
function setDefault(key,value)
	default[key] = value
end

function restoreDefault()
	data = nil
	for k,v in pairs(default) do
		data[k] = v
	end
end

-- Sets the passed value as default, and if key is not set, sets it to value. Returns key.
function softInit(key,value)
	default[key] = value
	return conditionalSet(key,value)
end

function conditionalSet(key,value)
	if(not data[key])then
		data[key] = value
	end
	return data[key]
end

-- gets a key from the config database
function get(key)
	return data[key]
end
--
function getAll()
	return data
end
--
function getAllDeafault()
	return default
end


-- sets a key in the config database
function set(key,value)
	data[key] = value
end

-- Loads the config from the config file
function load()
	if(fs.exists(":dungeon/dcore/config.cfg"))then
		local configFile = fs.open(":dungeon/dcore/config.cfg", "r")
		if(configFile)then
			data = textutils.unserialize(configFile.readAll())
			configFile.close()
		end
	end
end

-- Saves the Config to the file
function save()
	local configFile = fs.open(":dungeon/dcore/config.cfg","w")
	configFile.writeLine(textutils.serialize(data))
	configFile.close()
end