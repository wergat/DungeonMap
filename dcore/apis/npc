local registeredTriggers = {}
function registerTrigger(name,func)
	registeredTriggers[name] = func
end

local npc = {}
local dialogCounter = 1
local openDialogs = {}

registerTrigger("rm",function(npc,args) local a,b = commands.testfor("@a[r="..args[1].."]") return a end)

function newTrigger(triggerName,args)
	local triggerObject = {}
	triggerObject.name = triggerName
	-- Check if this triggers the dialog
	triggerObject.check = function(self,npc)
		local t = registeredTriggers[(self.name)]
		if(t)then
			return t(npc,args)
		end
	end
	return triggerObject
end

-- Returns text object
-- newText(text[,color][,isOption])
function newText(text,color,option)
	local textObject = {}
	textObject.text = text or ""
	textObject.color = color
	textObject.italic = false
	textObject.underlined = false
	textObject.strikethough = false
	textObject.obfuscated = false
	textObject.bold = false
	textObject.isOption = option or false
	if(type(color) == "boolean")then
		textObject.isOption = color
		textObject.color = "white"
	end
	textObject.setText = function(self,text)
		self.text = text
		return self
	end	
	textObject.setColor = function(self,color)
		self.color = color
		return self
	end
	textObject.setIsOption = function(self,value)
		self.isOption = value
		return self
	end
	textObject.getJSONTable = function(self)
		local t = {}
		t.text = self.text
		if(self.color)then t.color = self.color end
		if(self.italic)then t.italic = self.italic end
		if(self.underlined)then t.underlined = self.underlined end
		if(self.strikethough)then t.strikethough = self.strikethough end
		if(self.obfuscated)then t.obfuscated = self.obfuscated end
		if(self.bold)then t.bold = self.bold end
		return t
	end
	return textObject
end

function newDialog(enabled)
	local dialogObject = {}
	dialogObject.text = {}
	dialogObject.triggers = {}
	dialogObject.answers = {}
	dialogObject.id = dialogCounter
	dialogCounter = dialogCounter + 1
	dialogObject.enabled = (type(enabled) == "boolean" and enabled or false)
	dialogObject.waitingForAnswer = false
	dialogObject.addTrigger = function(self,trigger,...)
		self.triggers[(#self.triggers+1)] = newTrigger(trigger,arg)
		return self
	end
	dialogObject.addText = function(self,text)
		self.text[(#self.text+1)] = text
		return self
	end
	dialogObject.addAnswer = function(self,answerText,triggerFunction)
		self.answers[(#self.answers+1)] = {["text"] = answerText,["func"] = triggerFunction}
		return self
	end
	
	dialogObject.enable = function(self)
		dialogObject.enabled = true
	end
	dialogObject.disable = function(self)
		dialogObject.enabled = false
	end
	dialogObject.setEnable = function(self,value)
		dialogObject.enabled = value
	end
	
	dialogObject.triggerAnswer = function(self,answerID)
		if(self.answers[answerID])then
			self.answers[answerID]["func"]()
		end
	end
	
	-- Execute whatever is needed to get this dialog to the player
	dialogObject.run = function(self,villager)
		if(not self.waitingForAnswer)then
			commands.exec("/scoreboard players set 1 dc_dialog 0")
			local text = {}
			text[(#text+1)] = {["text"] = "[",["color"] = "white",["bold"] = false}
			text[(#text+1)] = {["text"] = villager.name,["color"] = villager.color,["bold"] = true}
			text[(#text+1)] = {["text"] = "] ",["color"] = "white",["bold"] = false}
			for i=1,#self.text do
				text[(#text+1)] = self.text[i]:getJSONTable()
			end
			text[(#text+1)] = {["text"] = " ",["color"] = "white",["bold"] = false}
			for i=1,#self.answers do
				text[(#text+1)] = self.answers[i].text:getJSONTable()
				text[(#text)].clickEvent = {["action"] = "run_command",["value"] = "/scoreboard players set "..self.id.." dc_dialog "..i}
				text[(#text)].text = "["..text[(#text)].text.."] "
			end
			commands.exec("/tellraw @a "..textutils.serializeJSON(text))
			-- Set that the Dialog is run and waits for answer
			self.waitingForAnswer = true
		end
	end
	return dialogObject
end

function newNPC()
	local npcObject = {}
	-- {dialog = ...,triggers = {...,...}},...
	npcObject.dialog = {}
	npcObject.position = {}
	npcObject.mostRecentlyChangedDialog = nil
	npcObject.color = "yellow"
	npcObject.name = "Villager"
	
	npcObject.addDialog = function(self,dialog)
		local d = dialog
		local t = {}
		for i=1,#d.triggers do
			t[i] = d.triggers[i]
		end
		self.dialog[(#self.dialog+1)] = {["dialog"] = d,["triggers"] = t}
		self.mostRecentlyChangedDialog = #self.dialog
		setmetatable(self,{__tostring = function() return #self.dialog end})
		return self
	end
	npcObject.getDialog = function(self,number)
		return self.dialog[number]
	end

	npcObject.checkForTriggedDialogID = function(self,dialogID,value)
		for i=1,#self.dialog do
			if(self.dialog[i].id == dialogID)then
				self.dialog[i].asnwers[value].func()
			end
		end
	end
	npcObject.checkForTrigger = function(self)
		for dialogID = 1,#self.dialog do
			if(self.dialog[dialogID].dialog.enabled and not self.dialog[dialogID].dialog.waitingForAnswer)then
				for triggerID = 1,#self.dialog[dialogID].triggers do
					local result = self.dialog[dialogID].triggers[triggerID]:check(self)
					if(result)then
						-- Run the Dialog Text and so on
						self.dialog[dialogID].dialog:run(self)
					end
				end
			end
		end
	end
	
	npcObject.checkForAnswer = function(self)
		for dialogID = 1,#self.dialog do
			if(self.dialog[dialogID].dialog.waitingForAnswer)then
				local a,b = commands.exec("/scoreboard players test "..(self.dialog[dialogID].dialog.id).." dc_dialog 1")
				if(a)then -- This dialog has been answered
					self.dialog[dialogID].dialog:triggerAnswer(tonumber(string.match(b[1],"%d")))
					commands.exec("/scoreboard players set "..(self.dialog[dialogID].dialog.id).." dc_dialog 0")
					self.dialog[dialogID].dialog.waitingForAnswer = false
					self.dialog[dialogID].dialog.enabled = false
				end
			end
		end
	end

	npcObject.setColor = function(self,color)
		self.color = color
		return self
	end
	npc[(#npc+1)] = npcObject
	return npcObject
end

--[[
local villager = newNPC()
local dialog1 = villager:addDialog(newDialog(true):addText(newText("Want a guess?")):addTrigger("rm",10):addAnswer(newText("Option A"),function() commands.say("Oh No, A!") end):addAnswer(newText("Option B"),function() commands.say("Yay B!") end))
local dialog2 = villager:addDialog(newDialog(true):addText(newText("Ehm Hello?")):addTrigger("rm",10):addAnswer(newText("who are you?"),function() commands.say("Nobody") end))

function checkVillagersForTrigger()
	for i=1,#npc do
		npc[i]:checkForTrigger()
		npc[i]:checkForAnswer()
	end
end
while true do
	checkVillagersForTrigger()
	sleep(1)
end

]]






