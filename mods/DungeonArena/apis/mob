local name1 = {"chel", "pr", "aer", "cat", "lu", "f", "cr", "o", "ali", "exan", "at", "we"}
local name2 = {"est", "y", "ul", "in", "cr", "am", "im", "rd", "en", "imi", "ene", "rg"}
local name3 = {"ra", "an", "us", "itus", "um", "es", "son", "o", "is", "s", "fyr", "at"}
function boss_name(units,seed)
	if seed then
		math.randomseed(seed)
	end
	local name = name1[math.random(#name1)]
	for i = 1, units do
		name = name .. name2[math.random(#name2)]
	end
    name = name .. name3[math.random(#name3)]
	return name:gsub("^%l", string.upper)
end

local ranks = {"High Prelan", "Ruler", "Right-Hand Man", "King", "Leader"}
--Summons a boss.
--@x,@y,@z: X, Y, and Z coordinates.
--@mobType: Type of mob.
--@difficulty: Mob level.
function summonBoss(x,y,z,mobType,difficulty)
	mob.initializeMob(x,y,z,mobType,difficulty)
	mob.setEquipmentOfMob()
	local data = mob.getMobDataForSummon()
	if data["SkeletonType"] == 1 then
		data["CustomName"] = boss_name(math.random(10)) .. ", " .. ranks[math.random(#ranks)] .. " of the Wither " .. pluralname(mob.getMobData("mobType"))
	else
		data["CustomName"] = boss_name(math.random(10)) .. ", " .. ranks[math.random(#ranks)] .. " of the " .. pluralname(mob.getMobData("mobType"))
	end
	if getMobData("mobType") == "spider_jockey" then
		data["Riding"] = {["id"] = "Spider"}
	end
	data["Equipment"][5] = {
	["id"] = 69,
	["Damage"] = 0,
	["Count"] = 1,
	["tag"] = {["display"] = {["Name"] = "Gate Key", ["Lore"] = {"Said to open Death's Shop.","Maybe there's a gate somewhere to use this on?", "You'd think placing it would be stupid of you."}}},
	}
	for i = 1, 5 do
		data["DropChances"][i] = "1.0f"
	end
	data["PersistenceRequired"] = "1b"
	
	local dataTag = dcore.getNBTStringFromTable(data)
	local cmd = "summon "..mob.getEntityName(mob.getMobData("mobType")).." "..mob.getMobData("xCoord").." "..mob.getMobData("yCoord").." "..mob.getMobData("zCoord").." "..dataTag
	local success,answer = commands.exec(cmd)

	if(not answer)then
		print_log("command","[error] Failed to execute Command: "..cmd.."; Error message:"..answer[1]..(answer[2] or "").."")
	end
end
