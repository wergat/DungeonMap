if not script then
	os.loadAPI("script")
end
get_text = script.get_text
local function get_v(id)
	if not fs.exists(".config") then
		return nil
	end
	local open = fs.open(".config", "r")
	local all = open.readAll()
	open.close()
	all = textutils.unserialize(all)
	if all[id] then
		return all[id]
	else
		return nil
	end
end

local nm = newMob
newMob = function(...)
	local mob = nm(unpack({...}))
	if get_v("Item Drop Rate") == "None" then
		mob.dropChances = {"0.0f","0.0f","0.0f","0.0f","0.0f"} --0%
	elseif get_v("Item Drop Rate") == "Few" then
		mob.dropChances = {"0.05f","0.05f","0.05f","0.05f","0.05f"} --5%
	elseif get_v("Item Drop Rate") == "Normal" then
		mob.dropChances = {"0.1f","0.1f","0.1f","0.1f","0.1f"} --10%
	elseif get_v("Item Drop Rate") == "High" then
		mob.dropChances = {"0.5f","0.5f","0.5f","0.5f","0.5f"} --50%
	elseif get_v("Item Drop Rate") == "All" then
		mob.dropChances = {"1.0f","1.0f","1.0f","1.0f","1.0f"} --100%
	end
	return mob
end

local ranks = get_text("mob.ranks")
--Summons a boss.
--@x,@y,@z: X, Y, and Z coordinates.
--@mobType: Type of mob.
--@difficulty: Mob level.
function summonBoss(x,y,z,mobType,difficulty)
	local boss = mob.newMob({difficulty = difficulty, type = mobType})
	boss:auto()
	boss.name = boss_name(math.random(10)) .. ", " .. ranks[math.random(#ranks)] .. " of the Mobs"
    boss.PersistenceRequired = "1b"
	boss:setEquipment("helmet",{["id"] = 131,["Damage"] = 0,["Count"] = 1,["tag"] = {["display"] = {["Name"] = SS("r") .. get_text("chest.key_name"), ["Lore"] = {get_text("chest.keys_lore_real")[1], get_text("chest.keys_lore_real")[2]}}}})
	boss:setDropChances({"1.0f","1.0f","1.0f","1.0f","1.0f"})
	boss:summon(x,y,z)
end
