print("Begin rednet receiver program!")
rednet.open("top")

local function res()
	_G["removeChests"]()
	fs.delete(".config")
	rednet.send(2, 1, "controls")
	os.reboot()
end
local function get_vv(id)
	local open = fs.open(".config", "r")
	local all = open.readAll()
	open.close()
	all = textutils.unserialize(all)
	if all[id] then
		return all[id]
	else
		return false
	end
end
local getAmountOfLivesStillRemaining = function()
	if get_vv("lv") then
		return get_vv("lives") or "unknown"
	else
		return "Infinity"
	end
end
local ts = function()
	return "Hello, world!"
end
commandList = {
	["Reset"] = res,
	["Test"] = ts,
	["Lives"] = getAmountOfLivesStillRemaining,
}

while true do
	local id, message, protocol = rednet.receive("controls")
	if id == 2 then
		print(message)
		if (type(commandList[message]) == "function") then		
			print("#2 requests for \"" .. message.."\"")
			local result = commandList[message]()
			if not result then
				result = true
			end
			rednet.send(2, result, "controls")
			print("Sent " .. tostring(res) .. " back to #2!")
		elseif(string.sub(message,1,4) == "name")then
			local name = string.sub(message,6,-1)
			print("New player ("..name..") registered!")
			rednet.send(2,tostring(commands.exec("/testfor @a[name="..name.."]")), "controls")
		elseif(message == "commands")then
			write("Client request for commands! ")
			local t = {}
			for k, v in pairs(commandList) do t[#t+1] = k end
			print(#t.." found!")
			rednet.send(2,t, "controls")
		elseif(message == "reboot")then
			os.reboot()
		elseif(message == "reset")then
			_G["removeChests"]()
			fs.delete(".config") 
			os.reboot()
		else
			print("Invalid command ("..message.."), sent true back to #2")
			rednet.send(2, true, "controls")
		end
	end
end
