rooms = {}
rooms[1] = {}
rooms[1][1] = {{20,19,-50},{29,19,-48},{24,19,-39}}
rooms[1][2] = {{20,19,-28},{26,20,-28},{24,19,-18}}
rooms[1][3] = {{25,19,-11},{23,17,-5},{26,19,1}}
rooms[1][4] = {{29,19,10},{25,19,17},{19,19,14}}
rooms[1][5] = {{29,19,30},{21,19,38},{24,19,29}}

rooms[2] = {}
rooms[2][1] = {{44,19,51},{49,19,-43},{40,19,-40}}
rooms[2][2] = {{44,19,-30},{49,19,-24},{39,19,-19}}
rooms[2][3] = {{45,19,-13},{46,17,-5},{40,19,-6}}
rooms[2][4] = {{39,19,10},{46,19,20},{44,19,15}}
rooms[2][5] = {{44,19,28},{52,19,35},{38,19,36}}

rooms[3] = {}
rooms[3][1] = {{64,19,-50},{62,17,-46},{64,20,-44}}
rooms[3][2] = {{71,19,-26},{60,20,-27},{64,19,-19}}
rooms[3][3] = {{64,19,5},{54,20,-9},{64,20,-15}}
rooms[3][4] = {{69,19,20},{58,19,16},{63,19,9}}
rooms[3][5] = {{66,19,40},{65,19,31},{56,19,35}}

rooms[4] = {}
rooms[4][1] = {{91,19,-46},{80,19,-47},{84,19,-38}}
rooms[4][2] = {{79,19,-27},{85,19,-19},{77,19,-23}}
rooms[4][3] = {{78,19,-5},{84,19,-5},{84,19,2}}
rooms[4][4] = {{83,19,7},{79,19,20},{91,19,16}}
rooms[4][5] = {{84,19,28},{91,19,35},{77,19,35}}

rooms[5] = {}
rooms[5][1] = {{108,19,-48},{104,19,-39},{97,19,-45}}
rooms[5][2] = {{100,19,-30},{110,19,-25},{105,19,-19}}
rooms[5][3] = {{104,19,0},{104,19,-12},{102,17,-5}}
rooms[5][4] = {{108,19,15},{101,19,10},{99,19,20}}
rooms[5][5] = {{99,19,30},{110,19,34},{99,19,40}}

--Forest Biome
rooms_forest = {}
rooms_forest[1] = {}
rooms_forest[1][1] = {{60,28,16},{68,28,15},{63,28,21}}
rooms_forest[1][2] = {{84,28,15},{84,28,20},{91,28,15}}
rooms_forest[1][3] = {{84,28,-9},{86,29,0},{80,27,-4}}
rooms_forest[1][4] = {{88,27,-20},{90,28,-24},{84,27,-28}}
rooms_forest[1][5] = {{59,28,-25},{64,28,-28},{70,29,-20}}

rooms_forest[2] = {}
rooms_forest[2][1] = {{44,28,-24},{38,28,-24},{47,30,-28}}
rooms_forest[2][2] = {{48,28,-7},{49,28,-1},{37,28,-4}}
rooms_forest[2][3] = {{48,28,11},{44,27,17},{50,29,19}}

--Mines
rooms_mines = {}
rooms_mines[1] = {}
rooms_mines[1][1] = {{81, 11, -11}, {85, 11, -5}, {81, 11, 1}}
rooms_mines[1][2] = {{85, 11, -21}, {88, 11, -30}, {90, 12, -19}}
rooms_mines[1][3] = {{62, 11, -32}, {64, 9, -24}, {60, 11, -20}}
rooms_mines[1][4] = {{64, 11, -6}, {60, 11, 0}, {68, 11, 0}}
rooms_mines[1][5] = {{63, 12, 15}, {71, 11, 16}, {59, 11, 10}}

rooms_mines[2] = {}
rooms_mines[2][1] = {{64, 11, 40}, {58, 11, 31}, {69, 11, 29}}
rooms_mines[2][2] = {{82, 11, -32}, {90, 12, -19}, {83, 9, -22}}
rooms_mines[2][3] = {{90, 11, -9}, {87, 12, -3}, {81, 13, -5}}

function getChestPlaceTable()
	t = {}
	local function a(b,c,d)
		table.insert(t,{b,c,d})
	end

	a(58,17,-8)
	a(62,17,1)
	a(63,17,-8)
	a(68,17,-4)
	a(73,17,3)
	a(67,17-9)

	a(40,19,-2)
	a(38,19,-11)
	a(42,19,-12)
	a(42,17,-4)

	a(39,19,1)
	a(26,17,-5)
	a(22,19,-13)

	a(23,19,-26)
	a(27,19,-30)
	a(17,19,-25)

	a(38,19,-21)
	a(42,10,-34)
	a(38,21,-31)

	a(64,19,-28)
	a(56,19,-23)
	a(66,19,-18)

	a(78,19,-31)
	a(88,19,-23)
	a(79,17,-19)

	a(106,17,-25)
	a(110,19,-19)
	a(104,19,-28)

	a(101,19,-44)
	a(102,19,-52)
	a(107,19,-46)

	a(82,19,-52)
	a(83,19,-44)
	a(87,19,-40)

	a(60,17,-41)
	a(69,21,-50)
	a(61,21,-49)
	a(65,17,-43)

	a(46,19,-52)
	a(40,20,-39)
	a(44,19,-46)

	a(28,19,-43)
	a(17,19,-44)
	a(26,19,-37)

	a(86,19,0)
	a(81,20,-3)
	a(86,19,-10)
	a(89,19,-7)

	a(110,19,1)
	a(102,19,-1)
	a(100,17,-6)
	a(111,19,-5)

	a(103,19,12)
	a(110,19,21)
	a(98,19,19)

	a(82,19,11)
	a(81,19,19)
	a(78,21,9)

	a(68,19,19)
	a(68,19,12)
	a(60,32,17)

	a(45,19,14)
	a(46,19,12)
	a(50,19,19)

	a(18,19,9)
	a(28,19,9)
	a(29,19,9)

	a(30,19,29)
	a(26,19,42)
	a(27,19,36)

	a(43,19,35)
	a(47,19,41)
	a(38,19,32)

	a(59,19,31)
	a(62,17,32)
	a(72,19,33)

	a(86,19,30)
	a(86,19,42)
	a(82,19,42)
	a(81,19,36)
	a(89,19,33)

	a(108,19,39)
	a(111,19,33)
	a(98,19,31)
	
	return t
end

function getRooms(x)
	local picked_rooms = rooms or room.rooms
	local picked_f_rooms = rooms_forest or room.rooms_forest
	local picked_m_rooms = rooms_mines or room.rooms_mines
	local roomsToSpawnIn = {}
	local n1; local n2; local n3;
	n1 = x/3
	n2 = x/3
	n3 = x/3
	if x/3 ~= math.floor(x/3) then
		n3 = math.floor(n3)
		n2 = math.floor(n2)
		n1 = x-n2-n3
	end
	n1 = 2*n1
	n2 = 2*n2
	n3 = 2*n3
	commands.execd('/tellraw @a "d: ' .. n1 .. ' f: ' .. n2 .. ' m: ' .. n3 .. '"')
	for i=1,n1 do
		local rx = math.random(5)
		local ry = math.random(5)
		while not picked_rooms[rx][ry] do
			rx = math.random(5)
			ry = math.random(5)
		end
	
		roomsToSpawnIn[i] = picked_rooms[rx][ry][math.random(#picked_rooms[rx][ry])]
		picked_rooms[rx][ry] = nil
	end
	for i=1,n2 do
		local x = true
		while x do
			rx = math.random(2)
			ry = math.random(5)
			if not picked_f_rooms[rx][ry] then
				rx = math.random(2)
				ry = math.random(5)
			else
				x = false
			end
		end
		--print(rx, " ", ry)
	
		roomsToSpawnIn[n1+i] = picked_f_rooms[rx][ry][math.random(#picked_f_rooms[rx][ry])]
		picked_f_rooms[rx][ry] = nil
	end
	for i=1,n3 do
		local x = true
		while x do
			rx = math.random(2)
			ry = math.random(5)
			if not picked_m_rooms[rx][ry] then
				rx = math.random(2)
				ry = math.random(5)
			else
				x = false
			end
		end
	
		roomsToSpawnIn[n1+n2+i] = picked_m_rooms[rx][ry][math.random(#picked_m_rooms[rx][ry])]
		picked_m_rooms[rx][ry] = nil
	end
	rx = nil
	ry = nil
	return roomsToSpawnIn
end