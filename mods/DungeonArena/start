--Special functions
local tArgs = {...}
if tArgs[1] == "help" then
	print("Usage: start [mode]")
	print("Valid modes are: reset (reset progress)")
elseif tArgs[1] == "reset" then
	if fs.exists(".config") then
		fs.delete(".config")
	end
	print("Reset progress!")
	return
end
--Set variables and crap
commands.execA = function(cmd)
	local taskID = commands.execAsync(cmd)
	repeat
		local event, id, suc, exec, err = os.pullEvent("task_complete")
	until id == taskID
	if not err then
		err = {}
	end
	return suc, err
end
print("Loading APIs")
os.loadAPI(":dungeon/dcore/apis/dcore")
os.loadAPI("/dungeon/mods/DungeonArena/room")
dcore.requireAPI("chest")
dcore.requireAPI("advitem")
dcore.requireAPI("villager")
dcore.requireAPI("achievement")
dcore.requireAPI("cmd")
print("...done")

local wave = 1
local level = 1
local rooms = room.rooms
local villager_areas = {
{62,26,38},
{56,26,38},
{56,26,28},
}

local high_level_villager_areas = {
{53,26,31},
{53,26,35},
}
print("Initialising")
--Set config
if not fs.exists(".config") then
	local open = fs.open(".config", "w")
	open.write(textutils.serialize({}))
	open.close()
end
write(".")
local function getScoreboard()
	local _, data = commands.exec("/scoreboard players list @p")
	local x = data[2]:gsub("- m_v: ", "")
	x = x:gsub(" %(m_v%)", "")
	x = tonumber(x)
	return x
end
write(".")
local function getChest(past)
	local chests = room.getChestPlaceTable()
	local r = chests[math.random(#chests)]
	if past[r] then
		return getChest(path)
	else
		return r
	end
end
write(".")
local function set(m, id)
	commands.exec("/scoreboard players set @a m_v 0")
	local open = fs.open(".config", "r")
	local all = open.readAll()
	open.close()
	all = textutils.unserialize(all)
	if all[id] ~= nil then
		return all[id]
	end
	local command = '/tellraw @p ["",{"text":"' .. m .. '","color":"green"},{"text":" [Yes]","color":"dark_green","clickEvent":{"action":"run_command","value":"/scoreboard players set @a m_v 1"}},{"text":" [No]","color":"red","clickEvent":{"action":"run_command","value":"/scoreboard players set @a m_v 2"}}]'
	commands.exec(command)
	repeat
		x = getScoreboard()
		sleep(0.05)
	until x ~= 0
	if x == 1 then
		all[id] = true
	else
		all[id] = false
	end
	local open = fs.open(".config", "w")
	open.write(textutils.serialize(all))
	open.close()
	commands.exec("/scoreboard players set @a m_v 0")
	return x
end
local function set_v(id, s)
	local open = fs.open(".config", "r")
	local all = open.readAll()
	open.close()
	all = textutils.unserialize(all)
	all[id] = s
	all = textutils.serialize(all)
	local open = fs.open(".config", "w")
	open.write(all)
	open.close()
end
write(".")
local function get_v(id)
	local open = fs.open(".config", "r")
	local all = open.readAll()
	open.close()
	all = textutils.unserialize(all)
	if all[id] then
		return all[id]
	else
		return false
	end
end
write(".")
set("Do you want to be able to play copyrighted music?", "cm")
set("Do you want a limited amount of lives, with extra lives being purchaseable?", "lv")
write(".")
--Check and set settings
local w = 0
multishell.launch({}, "live")
multishell.launch({}, "rednet_receiver")
if get_v("wave") then
	wave = tonumber(get_v("wave"))
	level = 1
	if wave ~= 1 then
		w = 0
		repeat
			w = w + 1
			level = level + (w/4) + 1
		until w == wave-1
	end
	level = tonumber(level) --My OCPD complains that this needs to exist
end
if get_v("cm") and get_v("wave") == nil then
	commands.exec('/tellraw @a ["",{"text":"Be sure to download the music resource pack! ","color":"gold"},{"text":"[click]","color":"green","clickEvent":{"action":"open_url","value":"https://www.dropbox.com/s/vwr8kpgqtbrpnyk/DungeonMap%20Arena%20Music.zip?dl=0"},"hoverEvent":{"action":"show_text","value":{"text":"","extra":[{"text":"Click!"}]}}}]')
end
--TP in Arena
if not get_v("stage") then
	commands.exec("/tp @a 45 28 14")
	commands.exec("/spawnpoint @a -7 4 8")
	commands.exec("/gamerule keepInventory true")
	--Give starter equipment
	commands.exec("/clear @a")
	commands.exec("/give @a 364 10")
	for i=1,10 do
	commands.exec("/give @r torch")
	end
	write(".")
	sleep(1)
	local t = _G["plist"]
	for i=1,#t do
		for j=1,5 do
			local tagtable, more
			if(j==1)then
				tagtable, more = advitem.getEquipment(math.floor(level*20+6),j,"zombie")
			else
				tagtable, more = advitem.getEquipment(math.floor(level*20+0.5),j,"zombie")
			end
		
			if tagtable.tag then
				local command = "/give "..t[i].." " .. tagtable.id .. " 1 0 "
				command = command .. dcore.getNBTStringFromTable(tagtable.tag)
				commands.execA(command)
			end
		end
	end
	commands.exec('/give Atenefyr 4100 1 1 {display:{Name:"Options"},computerID:2,upgrade:1}')
end
write(".")
function killVillagers()
	print("Killing villagers")
	--commands.exec('/tellraw @a "Killing Villagers"')
	for j = 1, 10 do
		for i = 1, #villager_areas do
			local coords = villager_areas[i][1].. " " .. villager_areas[i][2] .. " " .. villager_areas[i][3]
			s,e = commands.exec("/summon ThrownPotion " .. coords .. " {Potion:{id:373,Damage:16428,Count:1}}")
			if(not s) then print(e[1]) end
		end
		for i = 1, #high_level_villager_areas do
			local coords = high_level_villager_areas[i][1].. " " .. high_level_villager_areas[i][2] .. " " .. high_level_villager_areas[i][3]
			s,e = commands.exec("/summon ThrownPotion " .. coords .. " {Potion:{id:373,Damage:16428,Count:1}}")
			if(not s) then print(e[1]) end
		end
		sleep(.01)
	end
	print("Killing more villagers")
	for j = 1, 10 do
		commands.exec("/summon ThrownPotion 82 26 35 {Potion:{id:373,Damage:16428,Count:1}}")
		commands.exec("/summon ThrownPotion 77 26 38 {Potion:{id:373,Damage:16428,Count:1}}")
		commands.exec("/summon ThrownPotion 80 26 38 {Potion:{id:373,Damage:16428,Count:1}}")
		commands.exec("/summon ThrownPotion 77 26 31 {Potion:{id:373,Damage:16428,Count:1}}")
		commands.exec("/summon ThrownPotion 62 26 28 {Potion:{id:373,Damage:16428,Count:1}}")
		commands.exec("/summon ThrownPotion 67 26 28 {Potion:{id:373,Damage:16428,Count:1}}")
		sleep(.01)
	end
	--commands.exec('/tellraw @a "The killing stopped!"')
end
write(".")
function summonVillagers()
	--commands.exec('/tellraw @a "Summoning Villagers"')
	print("Summoning villagers")
	villager.summon_drug(82,26,35,level,nil,get_v("lv"))
	if get_v("cm") then
		commands.exec('/setblock 62 27 27 air')
		villager.summon_music(62,26,28)
	else
		commands.exec('/setblock 62 27 27 wall_sign 3 replace {Text1:"Sorry, music is", Text2:"currently not", Text3:"available!"}')
	end
	villager.summon_currency(77,26,38)
	villager.summon_currency(80,26,38)
	villager.summon_food(77,26,31)
	villager.summon_sell(67,26,28)
	for i = 1, #villager_areas do
		villager.summon(villager_areas[i][1], villager_areas[i][2], villager_areas[i][3], level+5, 1, 0, true)
		sleep(0.2)
	end
	print("Summoning more villagers")
	for i = 1, #high_level_villager_areas do
		villager.summon(high_level_villager_areas[i][1], high_level_villager_areas[i][2], high_level_villager_areas[i][3], (level+5)*2, 1, 0, true)
		sleep(0.2)
	end
	--commands.exec('/tellraw @a "Done Villagers"')
end
write(".")
--loadETable(24,17,-5)
--loadETable(104,17,-25)
function loadETable(x,y,z)
        local function addBookshelf(x,baseY,z)
                local function addBookshelfOrNot(bshelf,a)
                        commands.async.setblock(x,baseY+a,z,((not bshelf) and 'minecraft:air' or 'minecraft:bookshelf'))
                end
                local lower = math.random(2)>1
                addBookshelfOrNot(lower,0)
                addBookshelfOrNot(lower and math.random(4) == 1,1)
        end
        for i=0,2 do
                addBookshelf(x-1+i,y,z+2)
                addBookshelf(x+2,y,z-1+i)
                addBookshelf(x-1+i,y,z-2)
                addBookshelf(x-2,y,z-1+i)
        end
end
write(".")
local function summonChests()
	print("Summoning chests")
	local count = math.random(2,4)
	local past = {}
	local chosen = {}
	for i = 1, count do
		local coords = getChest(past)
		past[coords] = true
		chosen[#chosen+1] = coords
		--commands.exec("/say " .. textutils.serialize(coords))
		chest.placeChest(level,coords[1],coords[2],coords[3])
	end
	print("Done summoning chests")
	
	print("Summoning anvil")
	--Summon anvil
	local coords = getChest(past)
	past[coords] = true
	chosen[#chosen+1] = coords
	commands.exec("/say " .. textutils.serialize(coords))
	sleep(0.1)
	commands.setblock(coords[1],coords[2],coords[3],"anvil")
	print("Done summoning anvil")
	
	print("Summoning bookshelves")
	loadETable(24,17,-5)
	loadETable(104,17,-25)
	print("Done summoning bookshelves")
	
	set_v("chest_coords", textutils.serialize(chosen))
end
write(".")
local function removeChests()
	if not get_v("chest_coords") then
		return false
	end
	print("Resetting chests")
	local chests = textutils.unserialize(get_v("chest_coords"))
	for i = 1, #chests do
		local coords = chests[i]
		commands.setblock(coords[1], coords[2], coords[3], "lava")
		sleep(1)
		commands.setblock(coords[1], coords[2], coords[3], "air")
	end
	print("Done resetting chests")
end
write(".")
if get_v("stage") ~= "shop" then
	killVillagers()
	summonVillagers()
end
--shell.run("/dungeon/mods/DungeonArena/reset")

-- Open forest gate
commands.exec("/setblock 84 28 23 air")
commands.exec("/setblock 84 29 23 air")

-- Close Key Gate
commands.exec("/setblock 64 19 45 iron_bars")
commands.exec("/setblock 64 20 45 iron_bars")

-- Close shop gate
commands.exec("/setblock 72 26 37 iron_bars")
commands.exec("/setblock 72 27 37 iron_bars")

--Get stage
local stage = "start"
if get_v("stage") then
	stage = get_v("stage")
end
--set_v("stage", stage)

if stage == "start" then
	--Setup wave
	shell.run("/dungeon/mods/DungeonArena/reset", level, wave)
	shell.run("/dungeon/mods/DungeonArena//wave", level)
end

--Remove chests
removeChests()

--Begin waves
if get_v("stage") ~= nil and get_v("stage") ~= "start" then
	print("\nSkipping to stage " .. stage)
	commands.exec('/tellraw @a "Skipping to stage ' .. stage .. '!"')
end
while true do
	if stage == "start" then
		commands.exec("/setblock -6 5 -1 air")
		commands.exec('/tellraw @a "Wave ' .. wave .. '"')
		set_v("wave", wave)
		
		--Summon chests
		summonChests()
		
		stage = "waiting_key"
		set_v("stage", stage)
	end
	if stage == "waiting_key" then
		--Open gate when lever is put in
		os.pullEvent("redstone")
	
		-- Close forest gate
		commands.exec("/setblock 84 28 23 iron_bars")
		commands.exec("/setblock 84 29 23 iron_bars")
	
		-- Open Key Gate
		commands.exec("/setblock 64 19 45 air")
		commands.exec("/setblock 64 20 45 air")
	
		-- Reset Redstone reciever
		commands.exec("/setblock -6 5 -1 air")
	
		-- Place Loot Chest
		chest.placeChest(level+5,64,20,53)
		
		stage = "waiting_shop"
		set_v("stage", stage)
	end
	if stage == "waiting_shop" then
		-- Wait for all players being done with looting the chest
		--commands.exec('/tellraw @a "Waiting for players infront of the shop"')
		repeat
			local _, aaa = commands.exec("/xp 0 @a[72,26,40,rm=5]")
			sleep(0.3)
		until #aaa == 0
		--commands.exec('/tellraw @a "Welcome to Death's Shop!"')
	
		-- Close Key Gate
		commands.exec("/setblock 64 19 45 iron_bars")
		commands.exec("/setblock 64 20 45 iron_bars")
		
		-- Open gate into leaving shop
		commands.exec("/setblock 78 31 26 air")
		commands.exec("/setblock 78 32 26 air")
		
		-- Open shop gate
		commands.exec("/setblock 72 26 37 air")
		commands.exec("/setblock 72 27 37 air")
		
		stage = "shop_start"
		set_v("stage", stage)
	end
	
	if stage == "shop_start" then
		-- Reset the arena
		shell.run("/dungeon/mods/DungeonArena/reset", level, wave)
			
		-- Summon the next wave
		sleep(1)
		print("Starting loading mobs")
		shell.run("/dungeon/mods/DungeonArena//wave", level)
		print("Done loading mobs")
	
		--Remove chests
		removeChests()
		
		-- Achievement
		for i = 1, #_G["plist"] do
			print("Shopper achievement for " .. _G["plist"][i])
			achievement.makeAchievement("Shopper", "Unlock the shop\nfor the first time.", _G["plist"][i], 3, false)
			sleep(1)
		end
		
		-- Increase the difficulty/wave
		wave = wave + 1
		level = level + (wave/4) + 1
		
		-- Reset Redstone reciever
		commands.exec("/setblock -6 5 -3 air")
		--Set up sign offers
		commands.exec('/setblock 75 27 32 air')
		commands.exec('/setblock 80 27 32 air')
		if http.get("http://www.timeapi.org/utc/now?%25b") then
			month = http.get("http://www.timeapi.org/utc/now?%25b").readAll()
			day = http.get("http://www.timeapi.org/utc/now?%25d").readAll()
			if month == "Oct" then --Pumpkin Pie: 50% discount during October!
				commands.exec('/setblock 75 27 32 wall_sign 3 replace {Text1:"50% DISCOUNT", Text2:"ON PUMPKIN PIE", Text3:"ONLY IN OCTOBER!"}')
				commands.exec('/setblock 80 27 32 wall_sign 3 replace {Text1:"50% DISCOUNT", Text2:"ON PUMPKIN PIE", Text3:"ONLY IN OCTOBER!"}')
				--commands.exec('/tellraw @a "We might have some sales!"')
			elseif month == "Apr" and day == "01" then --This was added on October 24th, 2015. I like to think ahead of time, okay? -Atenefyr
				commands.exec('/setblock 75 27 32 wall_sign 3 replace {Text1:"ALL FOODS", Text2:"ARE NOW FREE!"}')
				commands.exec('/setblock 80 27 32 wall_sign 3 replace {Text1:"ALL FOODS", Text2:"ARE NOW FREE!"}')
				commands.exec('/tellraw @a "The food store has a great announcement!"')
			else
				commands.exec('/setblock 75 27 32 wall_sign 3 replace {Text1:"BUY YOUR FOODS", Text2:"HERE!"}')
				commands.exec('/setblock 80 27 32 wall_sign 3 replace {Text1:"BUY YOUR FOODS", Text2:"HERE!"}')
			end
		else
			print("User has no internet, easter eggs have been removed.")
			for i = 1, #_G["plist"] do
				achievement.makeAchievement("Internet Killer", "Unlock the Shop\nwhile your internet\nis dead.", _G["plist"][i], 8, false)
			end
			month = ""
			day = ""
			commands.exec('/setblock 75 27 32 wall_sign 3 replace {Text1:"BUY YOUR FOODS", Text2:"HERE!"}')
			commands.exec('/setblock 80 27 32 wall_sign 3 replace {Text1:"BUY YOUR FOODS", Text2:"HERE!"}')
		end
		
		stage = "shop"
		set_v("stage", stage)
	end
	
	if stage == "shop" then
		--Wait until shopping is over, then clean up everything
		repeat
			local _, aaa = commands.exec("/xp 0 @a[84,28,26,rm=5]")
			sleep(0.3)
		until #aaa == 0
		commands.exec('/tellraw @a "Good luck!"')
	
		-- Close up going back gate
		commands.exec("/setblock 78 31 26 iron_bars")
		commands.exec("/setblock 78 32 26 iron_bars")
	
		-- Open forest gate
		commands.exec("/setblock 84 28 23 air")
		commands.exec("/setblock 84 29 23 air")
	
		if month == "Oct" then
			sleep(2.5)
			commands.exec("/setblock 84 28 20 lit_pumpkin")
			sleep(0.5)
			commands.exec("/setblock 84 28 20 air")
		end
	
		-- Destroy Loot chests with items inside
		commands.exec("/setblock 64 20 53 lava")
		sleep(1)
		commands.exec("/setblock 64 20 53 chest")
		
	
		-- Poor villagers
		killVillagers()
	
		-- Set up shop
		summonVillagers()
	
		-- Close shop gate
		commands.exec("/setblock 72 26 37 iron_bars")
		commands.exec("/setblock 72 27 37 iron_bars")
		--commands.exec('/tellraw @a "#ARENA_REMINDER_2"')
		
		stage = "start"
		set_v("stage", stage)
	end
end
